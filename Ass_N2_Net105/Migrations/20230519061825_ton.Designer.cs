// <auto-generated />
using System;
using Data.DbContexts;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Ass_N2_Net105.Migrations
{
    [DbContext(typeof(CuaHangDbContext))]
    [Migration("20230519061825_ton")]
    partial class ton
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Data.ModelsClass.ChucVu", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("ChucVu", (string)null);
                });

            modelBuilder.Entity("Data.ModelsClass.GioHang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdKH")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdKH");

                    b.ToTable("GioHang", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("9779e43b-fcfc-40a0-b778-fa6f4757fd55"),
                            IdKH = new Guid("3f8c0eff-a06a-4b07-a449-8832c622290d")
                        },
                        new
                        {
                            Id = new Guid("87c18de0-9653-408e-9f7d-36b2f5a3d890"),
                            IdKH = new Guid("f572907f-4e58-4ee3-b282-8100a3a2043f")
                        });
                });

            modelBuilder.Entity("Data.ModelsClass.GiohangChitiet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("IdGioHang")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdKichCo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdSPChitiet")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdGioHang");

                    b.HasIndex("IdKichCo");

                    b.HasIndex("IdSPChitiet");

                    b.ToTable("GiohangChitiet", (string)null);
                });

            modelBuilder.Entity("Data.ModelsClass.Hang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenHang")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hang", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("b9db8c0c-bf87-4e16-bdd2-a9fee4b14b4a"),
                            TenHang = "Adidas"
                        },
                        new
                        {
                            Id = new Guid("da7a593f-20e5-407e-85c6-4bb0a97f1a73"),
                            TenHang = "Nike"
                        });
                });

            modelBuilder.Entity("Data.ModelsClass.HinhAnh", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdChiTietSP")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("LinkAnh")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdChiTietSP");

                    b.ToTable("HinhAnh", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("e508ba75-5185-4ef4-b533-2099fff74a84"),
                            IdChiTietSP = new Guid("7aaf5675-683d-4608-9534-ea737a4247b3"),
                            LinkAnh = "C:\\Users\\Admin\\source\\repos\\NET105_Project\\ProjectViews\\wwwroot\\AnhNhanVien\\307ec916-d15c-41b9-aeb8-ebfbf7c58033_nature-3082832.jpg"
                        },
                        new
                        {
                            Id = new Guid("b596d1db-4113-4ed7-99e2-fa96a945d23c"),
                            IdChiTietSP = new Guid("51a13afd-08d1-4a20-a0e0-fb4447bd215d"),
                            LinkAnh = "C:\\Users\\Admin\\source\\repos\\NET105_Project\\ProjectViews\\wwwroot\\AnhNhanVien\\5752c6ba-f2e2-4331-95f2-2abaad283f46_nature-3082832.jpg"
                        });
                });

            modelBuilder.Entity("Data.ModelsClass.HoaDon", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<Guid?>("IdKH")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdMaGiamGia")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdNV")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaHD")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayTao")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<decimal?>("TongTien")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<int?>("TrangThai")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdKH");

                    b.HasIndex("IdMaGiamGia");

                    b.HasIndex("IdNV");

                    b.ToTable("HoaDon", (string)null);
                });

            modelBuilder.Entity("Data.ModelsClass.HoadonChitiet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<decimal?>("GiaBan")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("IdHoaDon")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdKichCo")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdSPChitiet")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("SoLuong")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdHoaDon");

                    b.HasIndex("IdKichCo");

                    b.HasIndex("IdSPChitiet");

                    b.ToTable("HoadonChitiet", (string)null);
                });

            modelBuilder.Entity("Data.ModelsClass.KhachHang", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySinh")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("KhachHang", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("3f8c0eff-a06a-4b07-a449-8832c622290d"),
                            DiaChi = "1",
                            Email = "a",
                            GioiTinh = true,
                            MatKhau = "1",
                            NgaySinh = new DateTime(2023, 5, 19, 13, 18, 25, 582, DateTimeKind.Local).AddTicks(7654),
                            Sdt = "1",
                            Ten = "a"
                        },
                        new
                        {
                            Id = new Guid("f572907f-4e58-4ee3-b282-8100a3a2043f"),
                            DiaChi = "2",
                            Email = "b",
                            GioiTinh = true,
                            MatKhau = "1",
                            NgaySinh = new DateTime(2023, 5, 19, 13, 18, 25, 582, DateTimeKind.Local).AddTicks(7658),
                            Sdt = "2",
                            Ten = "b"
                        });
                });

            modelBuilder.Entity("Data.ModelsClass.KichCo", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<float?>("Size")
                        .IsRequired()
                        .HasColumnType("real");

                    b.HasKey("Id");

                    b.ToTable("KichCo", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("cd27319d-468d-4189-99a4-b2da273492a3"),
                            Size = 36f
                        },
                        new
                        {
                            Id = new Guid("d43ed236-c9cf-4659-ba0d-f834bb316d39"),
                            Size = 37f
                        },
                        new
                        {
                            Id = new Guid("d6dc21e2-f1be-48ec-8f30-bd6bbc73daec"),
                            Size = 38f
                        },
                        new
                        {
                            Id = new Guid("9297a9b2-5c69-4b52-af99-57bbf137dcf1"),
                            Size = 39f
                        },
                        new
                        {
                            Id = new Guid("3a218de7-0c55-4b70-a0d8-823195532b66"),
                            Size = 40f
                        },
                        new
                        {
                            Id = new Guid("2d53402b-696d-4e6e-b95e-fb5f2a99c014"),
                            Size = 41f
                        },
                        new
                        {
                            Id = new Guid("560cd8d3-52cc-4204-9145-0a142cdac1fd"),
                            Size = 42f
                        },
                        new
                        {
                            Id = new Guid("9b9a3a86-196e-4fb2-9300-a64784962d59"),
                            Size = 43f
                        });
                });

            modelBuilder.Entity("Data.ModelsClass.MaGiamGia", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ma")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayBatdau")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("NgayKetthuc")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<int>("PhanTramGiam")
                        .HasColumnType("int");

                    b.Property<int?>("SoLuong")
                        .IsRequired()
                        .HasColumnType("int");

                    b.Property<int?>("TrangThai")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("MaGiamGia", (string)null);
                });

            modelBuilder.Entity("Data.ModelsClass.MauSac", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenMau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("MauSac", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7a6c0c50-fb67-44ea-9c62-ad0e0f67ab3c"),
                            TenMau = "Xanh"
                        },
                        new
                        {
                            Id = new Guid("5e5f7d51-044f-4928-9aac-4a496c629231"),
                            TenMau = "Đỏ"
                        },
                        new
                        {
                            Id = new Guid("cfa013b0-34dc-44d5-a471-7c49a9ac167d"),
                            TenMau = "Đen"
                        },
                        new
                        {
                            Id = new Guid("8d364a55-877f-45a5-9408-66afb8ab873f"),
                            TenMau = "Trắng"
                        });
                });

            modelBuilder.Entity("Data.ModelsClass.NhanVien", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnhNhanVien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DiaChi")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool?>("GioiTinh")
                        .IsRequired()
                        .HasColumnType("bit");

                    b.Property<Guid?>("IdCvu")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdGuiBaoCao")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdGuiBcNavigationId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaNV")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("MatKhau")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgaySinh")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("Sdt")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdCvu");

                    b.HasIndex("IdGuiBcNavigationId");

                    b.ToTable("NhanVien", (string)null);
                });

            modelBuilder.Entity("Data.ModelsClass.SanPham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdHang")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Ten")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdHang");

                    b.ToTable("SanPham", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("01bf8a6c-d89a-4db2-9068-af277be488ae"),
                            IdHang = new Guid("b9db8c0c-bf87-4e16-bdd2-a9fee4b14b4a"),
                            Ten = "Giay 1",
                            TrangThai = 1
                        },
                        new
                        {
                            Id = new Guid("9a1b3786-d0d0-402a-bfd8-10db04f8e6ed"),
                            IdHang = new Guid("da7a593f-20e5-407e-85c6-4bb0a97f1a73"),
                            Ten = "Giay 2",
                            TrangThai = 1
                        });
                });

            modelBuilder.Entity("Data.ModelsClass.SanphamChitiet", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("AnhDaiDien")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnhPhu1")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnhPhu2")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AnhPhu3")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("GiaBan")
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal?>("GiaNhap")
                        .IsRequired()
                        .HasColumnType("decimal(18,2)");

                    b.Property<Guid?>("IdMauSac")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdSP")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("MaSPChiTiet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("NgayTao")
                        .IsRequired()
                        .HasColumnType("datetime2");

                    b.Property<string>("TenSPChiTiet")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("TrangThai")
                        .IsRequired()
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdMauSac");

                    b.HasIndex("IdSP");

                    b.ToTable("SanphamChitiet", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("7aaf5675-683d-4608-9534-ea737a4247b3"),
                            AnhDaiDien = "null",
                            AnhPhu1 = "null",
                            AnhPhu2 = "null",
                            AnhPhu3 = "null",
                            GiaBan = 100000m,
                            GiaNhap = 80000m,
                            IdMauSac = new Guid("7a6c0c50-fb67-44ea-9c62-ad0e0f67ab3c"),
                            IdSP = new Guid("01bf8a6c-d89a-4db2-9068-af277be488ae"),
                            MaSPChiTiet = "SP1",
                            NgayTao = new DateTime(2023, 5, 19, 13, 18, 25, 582, DateTimeKind.Local).AddTicks(7166),
                            TenSPChiTiet = "V1",
                            TrangThai = 1
                        },
                        new
                        {
                            Id = new Guid("51a13afd-08d1-4a20-a0e0-fb4447bd215d"),
                            AnhDaiDien = "null",
                            AnhPhu1 = "null",
                            AnhPhu2 = "null",
                            AnhPhu3 = "null",
                            GiaBan = 200000m,
                            GiaNhap = 180000m,
                            IdMauSac = new Guid("5e5f7d51-044f-4928-9aac-4a496c629231"),
                            IdSP = new Guid("9a1b3786-d0d0-402a-bfd8-10db04f8e6ed"),
                            MaSPChiTiet = "SP2",
                            NgayTao = new DateTime(2023, 5, 19, 13, 18, 25, 582, DateTimeKind.Local).AddTicks(7187),
                            TenSPChiTiet = "V2",
                            TrangThai = 1
                        },
                        new
                        {
                            Id = new Guid("ec94662b-535d-4599-b462-9951c727be51"),
                            AnhDaiDien = "null",
                            AnhPhu1 = "null",
                            AnhPhu2 = "null",
                            AnhPhu3 = "null",
                            GiaBan = 100000m,
                            GiaNhap = 80000m,
                            IdMauSac = new Guid("8d364a55-877f-45a5-9408-66afb8ab873f"),
                            IdSP = new Guid("01bf8a6c-d89a-4db2-9068-af277be488ae"),
                            MaSPChiTiet = "SP1",
                            NgayTao = new DateTime(2023, 5, 19, 13, 18, 25, 582, DateTimeKind.Local).AddTicks(7191),
                            TenSPChiTiet = "V1",
                            TrangThai = 1
                        },
                        new
                        {
                            Id = new Guid("bcb53bdb-2f7e-4026-a5a3-09ff834562ad"),
                            AnhDaiDien = "null",
                            AnhPhu1 = "null",
                            AnhPhu2 = "null",
                            AnhPhu3 = "null",
                            GiaBan = 200000m,
                            GiaNhap = 180000m,
                            IdMauSac = new Guid("cfa013b0-34dc-44d5-a471-7c49a9ac167d"),
                            IdSP = new Guid("9a1b3786-d0d0-402a-bfd8-10db04f8e6ed"),
                            MaSPChiTiet = "SP2",
                            NgayTao = new DateTime(2023, 5, 19, 13, 18, 25, 582, DateTimeKind.Local).AddTicks(7198),
                            TenSPChiTiet = "V2",
                            TrangThai = 1
                        });
                });

            modelBuilder.Entity("Data.ModelsClass.SizeSanPham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdSanPhamChiTiet")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid?>("IdSize")
                        .IsRequired()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("SoLuong")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("IdSanPhamChiTiet");

                    b.HasIndex("IdSize");

                    b.ToTable("SizeSanPham", (string)null);

                    b.HasData(
                        new
                        {
                            Id = new Guid("5ee0fa3d-9ab6-490a-83ca-01021103412d"),
                            IdSanPhamChiTiet = new Guid("7aaf5675-683d-4608-9534-ea737a4247b3"),
                            IdSize = new Guid("cd27319d-468d-4189-99a4-b2da273492a3"),
                            SoLuong = 10
                        },
                        new
                        {
                            Id = new Guid("7378b6ec-8274-4186-8855-0cafc1ce5881"),
                            IdSanPhamChiTiet = new Guid("7aaf5675-683d-4608-9534-ea737a4247b3"),
                            IdSize = new Guid("d43ed236-c9cf-4659-ba0d-f834bb316d39"),
                            SoLuong = 5
                        },
                        new
                        {
                            Id = new Guid("d09fd8b7-8263-4014-91d8-63ea9470a8de"),
                            IdSanPhamChiTiet = new Guid("7aaf5675-683d-4608-9534-ea737a4247b3"),
                            IdSize = new Guid("d6dc21e2-f1be-48ec-8f30-bd6bbc73daec"),
                            SoLuong = 5
                        },
                        new
                        {
                            Id = new Guid("5885a945-5722-4177-8fa7-d26b0dacf980"),
                            IdSanPhamChiTiet = new Guid("7aaf5675-683d-4608-9534-ea737a4247b3"),
                            IdSize = new Guid("9297a9b2-5c69-4b52-af99-57bbf137dcf1"),
                            SoLuong = 5
                        },
                        new
                        {
                            Id = new Guid("0515437f-c4ab-4956-8b65-4f7d183b1620"),
                            IdSanPhamChiTiet = new Guid("7aaf5675-683d-4608-9534-ea737a4247b3"),
                            IdSize = new Guid("3a218de7-0c55-4b70-a0d8-823195532b66"),
                            SoLuong = 10
                        },
                        new
                        {
                            Id = new Guid("bec142a2-48ab-4785-8295-63a08d7dbf99"),
                            IdSanPhamChiTiet = new Guid("7aaf5675-683d-4608-9534-ea737a4247b3"),
                            IdSize = new Guid("2d53402b-696d-4e6e-b95e-fb5f2a99c014"),
                            SoLuong = 5
                        },
                        new
                        {
                            Id = new Guid("a18febe6-0a68-44cb-8ca0-1514f5bb6d48"),
                            IdSanPhamChiTiet = new Guid("7aaf5675-683d-4608-9534-ea737a4247b3"),
                            IdSize = new Guid("560cd8d3-52cc-4204-9145-0a142cdac1fd"),
                            SoLuong = 5
                        },
                        new
                        {
                            Id = new Guid("6b5d160a-2812-4c8c-a63d-0a4535990221"),
                            IdSanPhamChiTiet = new Guid("7aaf5675-683d-4608-9534-ea737a4247b3"),
                            IdSize = new Guid("9b9a3a86-196e-4fb2-9300-a64784962d59"),
                            SoLuong = 5
                        },
                        new
                        {
                            Id = new Guid("a8b2d347-1af2-4027-8c6c-f368e567675f"),
                            IdSanPhamChiTiet = new Guid("51a13afd-08d1-4a20-a0e0-fb4447bd215d"),
                            IdSize = new Guid("cd27319d-468d-4189-99a4-b2da273492a3"),
                            SoLuong = 10
                        },
                        new
                        {
                            Id = new Guid("289ce400-38f1-47fc-a5fc-dbf88bf2582e"),
                            IdSanPhamChiTiet = new Guid("51a13afd-08d1-4a20-a0e0-fb4447bd215d"),
                            IdSize = new Guid("d43ed236-c9cf-4659-ba0d-f834bb316d39"),
                            SoLuong = 5
                        },
                        new
                        {
                            Id = new Guid("a16d0a3a-97e9-4b41-8c6a-54e35cdeaca3"),
                            IdSanPhamChiTiet = new Guid("51a13afd-08d1-4a20-a0e0-fb4447bd215d"),
                            IdSize = new Guid("d6dc21e2-f1be-48ec-8f30-bd6bbc73daec"),
                            SoLuong = 5
                        },
                        new
                        {
                            Id = new Guid("06dd39cf-f6c7-4605-9d4a-b4f764c29c73"),
                            IdSanPhamChiTiet = new Guid("51a13afd-08d1-4a20-a0e0-fb4447bd215d"),
                            IdSize = new Guid("9297a9b2-5c69-4b52-af99-57bbf137dcf1"),
                            SoLuong = 5
                        },
                        new
                        {
                            Id = new Guid("b172bc46-4292-4013-b327-6b2e3def9513"),
                            IdSanPhamChiTiet = new Guid("51a13afd-08d1-4a20-a0e0-fb4447bd215d"),
                            IdSize = new Guid("3a218de7-0c55-4b70-a0d8-823195532b66"),
                            SoLuong = 10
                        },
                        new
                        {
                            Id = new Guid("75c5f866-2e78-49bb-80bb-fcd9c7d662c8"),
                            IdSanPhamChiTiet = new Guid("51a13afd-08d1-4a20-a0e0-fb4447bd215d"),
                            IdSize = new Guid("2d53402b-696d-4e6e-b95e-fb5f2a99c014"),
                            SoLuong = 5
                        },
                        new
                        {
                            Id = new Guid("fbad9b0b-0e5a-43a0-8fc9-6aebc586420c"),
                            IdSanPhamChiTiet = new Guid("51a13afd-08d1-4a20-a0e0-fb4447bd215d"),
                            IdSize = new Guid("560cd8d3-52cc-4204-9145-0a142cdac1fd"),
                            SoLuong = 5
                        },
                        new
                        {
                            Id = new Guid("fe243159-e3d5-4e38-b4d5-875b908b1d73"),
                            IdSanPhamChiTiet = new Guid("51a13afd-08d1-4a20-a0e0-fb4447bd215d"),
                            IdSize = new Guid("9b9a3a86-196e-4fb2-9300-a64784962d59"),
                            SoLuong = 5
                        },
                        new
                        {
                            Id = new Guid("101c81ee-1ca5-4570-be45-c453527fa9aa"),
                            IdSanPhamChiTiet = new Guid("ec94662b-535d-4599-b462-9951c727be51"),
                            IdSize = new Guid("cd27319d-468d-4189-99a4-b2da273492a3"),
                            SoLuong = 10
                        },
                        new
                        {
                            Id = new Guid("507812da-fb24-4429-b50f-c1f5c28d2cc5"),
                            IdSanPhamChiTiet = new Guid("ec94662b-535d-4599-b462-9951c727be51"),
                            IdSize = new Guid("d43ed236-c9cf-4659-ba0d-f834bb316d39"),
                            SoLuong = 5
                        },
                        new
                        {
                            Id = new Guid("69d226ff-ad05-477f-8aaf-d4e9c8785233"),
                            IdSanPhamChiTiet = new Guid("ec94662b-535d-4599-b462-9951c727be51"),
                            IdSize = new Guid("d6dc21e2-f1be-48ec-8f30-bd6bbc73daec"),
                            SoLuong = 5
                        },
                        new
                        {
                            Id = new Guid("c5890b6f-463f-4ab3-9dba-cab55b32e929"),
                            IdSanPhamChiTiet = new Guid("ec94662b-535d-4599-b462-9951c727be51"),
                            IdSize = new Guid("9297a9b2-5c69-4b52-af99-57bbf137dcf1"),
                            SoLuong = 5
                        },
                        new
                        {
                            Id = new Guid("ec43012e-0ca2-4379-bccf-abd59824b300"),
                            IdSanPhamChiTiet = new Guid("ec94662b-535d-4599-b462-9951c727be51"),
                            IdSize = new Guid("3a218de7-0c55-4b70-a0d8-823195532b66"),
                            SoLuong = 10
                        },
                        new
                        {
                            Id = new Guid("daa1d08d-ec42-4db9-9c91-1ec72a7a7a09"),
                            IdSanPhamChiTiet = new Guid("ec94662b-535d-4599-b462-9951c727be51"),
                            IdSize = new Guid("2d53402b-696d-4e6e-b95e-fb5f2a99c014"),
                            SoLuong = 5
                        },
                        new
                        {
                            Id = new Guid("1030ea99-2996-4537-b301-3ff511199b66"),
                            IdSanPhamChiTiet = new Guid("ec94662b-535d-4599-b462-9951c727be51"),
                            IdSize = new Guid("560cd8d3-52cc-4204-9145-0a142cdac1fd"),
                            SoLuong = 5
                        },
                        new
                        {
                            Id = new Guid("df277b8d-c5d0-4f62-9df1-9b60a896f634"),
                            IdSanPhamChiTiet = new Guid("ec94662b-535d-4599-b462-9951c727be51"),
                            IdSize = new Guid("9b9a3a86-196e-4fb2-9300-a64784962d59"),
                            SoLuong = 5
                        },
                        new
                        {
                            Id = new Guid("4d38cd83-32ca-415b-8fbe-88b9a23489c5"),
                            IdSanPhamChiTiet = new Guid("bcb53bdb-2f7e-4026-a5a3-09ff834562ad"),
                            IdSize = new Guid("cd27319d-468d-4189-99a4-b2da273492a3"),
                            SoLuong = 10
                        },
                        new
                        {
                            Id = new Guid("efc5ffac-f3c6-4c13-a205-51cb97e7a99a"),
                            IdSanPhamChiTiet = new Guid("bcb53bdb-2f7e-4026-a5a3-09ff834562ad"),
                            IdSize = new Guid("d43ed236-c9cf-4659-ba0d-f834bb316d39"),
                            SoLuong = 5
                        },
                        new
                        {
                            Id = new Guid("f10629ff-6d82-462d-9f28-a22ac96ff880"),
                            IdSanPhamChiTiet = new Guid("bcb53bdb-2f7e-4026-a5a3-09ff834562ad"),
                            IdSize = new Guid("d6dc21e2-f1be-48ec-8f30-bd6bbc73daec"),
                            SoLuong = 5
                        },
                        new
                        {
                            Id = new Guid("801a3395-42b9-4874-8144-7d98bd15122e"),
                            IdSanPhamChiTiet = new Guid("bcb53bdb-2f7e-4026-a5a3-09ff834562ad"),
                            IdSize = new Guid("9297a9b2-5c69-4b52-af99-57bbf137dcf1"),
                            SoLuong = 5
                        },
                        new
                        {
                            Id = new Guid("57987315-cc58-4f70-918f-23858dcea978"),
                            IdSanPhamChiTiet = new Guid("bcb53bdb-2f7e-4026-a5a3-09ff834562ad"),
                            IdSize = new Guid("3a218de7-0c55-4b70-a0d8-823195532b66"),
                            SoLuong = 10
                        },
                        new
                        {
                            Id = new Guid("e0e5863b-7ae4-47d5-9a96-4c0f732af3f0"),
                            IdSanPhamChiTiet = new Guid("bcb53bdb-2f7e-4026-a5a3-09ff834562ad"),
                            IdSize = new Guid("2d53402b-696d-4e6e-b95e-fb5f2a99c014"),
                            SoLuong = 5
                        },
                        new
                        {
                            Id = new Guid("e1cff87b-abd8-4bf0-a7ce-199bd2716fc0"),
                            IdSanPhamChiTiet = new Guid("bcb53bdb-2f7e-4026-a5a3-09ff834562ad"),
                            IdSize = new Guid("560cd8d3-52cc-4204-9145-0a142cdac1fd"),
                            SoLuong = 5
                        },
                        new
                        {
                            Id = new Guid("69e6c908-ea91-4c4a-86f2-c5cb26ff9ee4"),
                            IdSanPhamChiTiet = new Guid("bcb53bdb-2f7e-4026-a5a3-09ff834562ad"),
                            IdSize = new Guid("9b9a3a86-196e-4fb2-9300-a64784962d59"),
                            SoLuong = 5
                        });
                });

            modelBuilder.Entity("Data.ModelsClass.TheLoai", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("TenTheLoai")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TheLoai", (string)null);
                });

            modelBuilder.Entity("Data.ModelsClass.TheLoaiSanPham", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdChiTietSP")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("IdTheLoai")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("IdChiTietSP");

                    b.HasIndex("IdTheLoai");

                    b.ToTable("TheLoaiSanPham", (string)null);
                });

            modelBuilder.Entity("Data.ModelsClass.GioHang", b =>
                {
                    b.HasOne("Data.ModelsClass.KhachHang", "KhachHang")
                        .WithMany("GioHangs")
                        .HasForeignKey("IdKH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KhachHang");
                });

            modelBuilder.Entity("Data.ModelsClass.GiohangChitiet", b =>
                {
                    b.HasOne("Data.ModelsClass.GioHang", "gioHang")
                        .WithMany("giohangChitiets")
                        .HasForeignKey("IdGioHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.ModelsClass.KichCo", "kichCo")
                        .WithMany("giohangChitiets")
                        .HasForeignKey("IdKichCo");

                    b.HasOne("Data.ModelsClass.SanphamChitiet", "sanphamChitiet")
                        .WithMany("giohangChitiets")
                        .HasForeignKey("IdSPChitiet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("gioHang");

                    b.Navigation("kichCo");

                    b.Navigation("sanphamChitiet");
                });

            modelBuilder.Entity("Data.ModelsClass.HinhAnh", b =>
                {
                    b.HasOne("Data.ModelsClass.SanphamChitiet", "sanphamChitiet")
                        .WithMany("hinhAnhs")
                        .HasForeignKey("IdChiTietSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("sanphamChitiet");
                });

            modelBuilder.Entity("Data.ModelsClass.HoaDon", b =>
                {
                    b.HasOne("Data.ModelsClass.KhachHang", "khachHang")
                        .WithMany("hoaDons")
                        .HasForeignKey("IdKH")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.ModelsClass.MaGiamGia", "maGiamGia")
                        .WithMany("hoaDons")
                        .HasForeignKey("IdMaGiamGia");

                    b.HasOne("Data.ModelsClass.NhanVien", "nhanVien")
                        .WithMany("hoaDons")
                        .HasForeignKey("IdNV");

                    b.Navigation("khachHang");

                    b.Navigation("maGiamGia");

                    b.Navigation("nhanVien");
                });

            modelBuilder.Entity("Data.ModelsClass.HoadonChitiet", b =>
                {
                    b.HasOne("Data.ModelsClass.HoaDon", "hoaDon")
                        .WithMany("hoadonChitiets")
                        .HasForeignKey("IdHoaDon")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.ModelsClass.KichCo", "kichCo")
                        .WithMany("hoadonChitiets")
                        .HasForeignKey("IdKichCo");

                    b.HasOne("Data.ModelsClass.SanphamChitiet", "sanphamChitiet")
                        .WithMany("hoadonChitiets")
                        .HasForeignKey("IdSPChitiet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hoaDon");

                    b.Navigation("kichCo");

                    b.Navigation("sanphamChitiet");
                });

            modelBuilder.Entity("Data.ModelsClass.NhanVien", b =>
                {
                    b.HasOne("Data.ModelsClass.ChucVu", "chucVu")
                        .WithMany("nhanViens")
                        .HasForeignKey("IdCvu")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.ModelsClass.NhanVien", "IdGuiBcNavigation")
                        .WithMany("InverseIdGuiBcNavigation")
                        .HasForeignKey("IdGuiBcNavigationId");

                    b.Navigation("IdGuiBcNavigation");

                    b.Navigation("chucVu");
                });

            modelBuilder.Entity("Data.ModelsClass.SanPham", b =>
                {
                    b.HasOne("Data.ModelsClass.Hang", "hang")
                        .WithMany("sanPhams")
                        .HasForeignKey("IdHang")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("hang");
                });

            modelBuilder.Entity("Data.ModelsClass.SanphamChitiet", b =>
                {
                    b.HasOne("Data.ModelsClass.MauSac", "mauSac")
                        .WithMany("sanphamChitiets")
                        .HasForeignKey("IdMauSac")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.ModelsClass.SanPham", "sanPham")
                        .WithMany("sanphamChitiets")
                        .HasForeignKey("IdSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("mauSac");

                    b.Navigation("sanPham");
                });

            modelBuilder.Entity("Data.ModelsClass.SizeSanPham", b =>
                {
                    b.HasOne("Data.ModelsClass.SanphamChitiet", "SanPhamChitiet")
                        .WithMany("SizeSanPhams")
                        .HasForeignKey("IdSanPhamChiTiet")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.ModelsClass.KichCo", "KichCo")
                        .WithMany("SizeSanPhams")
                        .HasForeignKey("IdSize")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("KichCo");

                    b.Navigation("SanPhamChitiet");
                });

            modelBuilder.Entity("Data.ModelsClass.TheLoaiSanPham", b =>
                {
                    b.HasOne("Data.ModelsClass.SanphamChitiet", "sanphamChitiet")
                        .WithMany("theLoaiSanPhams")
                        .HasForeignKey("IdChiTietSP")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Data.ModelsClass.TheLoai", "theLoai")
                        .WithMany("theloaiSanPhams")
                        .HasForeignKey("IdTheLoai")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("sanphamChitiet");

                    b.Navigation("theLoai");
                });

            modelBuilder.Entity("Data.ModelsClass.ChucVu", b =>
                {
                    b.Navigation("nhanViens");
                });

            modelBuilder.Entity("Data.ModelsClass.GioHang", b =>
                {
                    b.Navigation("giohangChitiets");
                });

            modelBuilder.Entity("Data.ModelsClass.Hang", b =>
                {
                    b.Navigation("sanPhams");
                });

            modelBuilder.Entity("Data.ModelsClass.HoaDon", b =>
                {
                    b.Navigation("hoadonChitiets");
                });

            modelBuilder.Entity("Data.ModelsClass.KhachHang", b =>
                {
                    b.Navigation("GioHangs");

                    b.Navigation("hoaDons");
                });

            modelBuilder.Entity("Data.ModelsClass.KichCo", b =>
                {
                    b.Navigation("SizeSanPhams");

                    b.Navigation("giohangChitiets");

                    b.Navigation("hoadonChitiets");
                });

            modelBuilder.Entity("Data.ModelsClass.MaGiamGia", b =>
                {
                    b.Navigation("hoaDons");
                });

            modelBuilder.Entity("Data.ModelsClass.MauSac", b =>
                {
                    b.Navigation("sanphamChitiets");
                });

            modelBuilder.Entity("Data.ModelsClass.NhanVien", b =>
                {
                    b.Navigation("InverseIdGuiBcNavigation");

                    b.Navigation("hoaDons");
                });

            modelBuilder.Entity("Data.ModelsClass.SanPham", b =>
                {
                    b.Navigation("sanphamChitiets");
                });

            modelBuilder.Entity("Data.ModelsClass.SanphamChitiet", b =>
                {
                    b.Navigation("SizeSanPhams");

                    b.Navigation("giohangChitiets");

                    b.Navigation("hinhAnhs");

                    b.Navigation("hoadonChitiets");

                    b.Navigation("theLoaiSanPhams");
                });

            modelBuilder.Entity("Data.ModelsClass.TheLoai", b =>
                {
                    b.Navigation("theloaiSanPhams");
                });
#pragma warning restore 612, 618
        }
    }
}
